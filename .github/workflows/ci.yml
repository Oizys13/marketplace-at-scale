name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Loop through all services
      - name: Install dependencies & run unit tests
        run: |
          for service in listings users orders worker; do
            echo "---- Installing and testing $service ----"
            cd services/$service
            npm install
            npm test -- --passWithNoTests
            cd ../..
          done

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker images
        run: |
          for service in listings users orders worker; do
            echo "---- Building and pushing $service ----"
            docker build -t ghcr.io/${{ github.repository }}/$service:latest ./services/$service
            docker push ghcr.io/${{ github.repository }}/$service:latest
          done

  integration-test:
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kind & kubectl
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Create kind cluster
        run: kind create cluster --name ci-cluster

      - name: Apply manifests
        run: |
          kubectl apply -f k8s/postgres.yaml
          kubectl apply -f k8s/rabbitmq.yaml
          kubectl apply -f k8s/listings-deployment.yaml
          kubectl rollout status deployment/listings-deployment

      - name: Run smoke tests
        run: |
          # Example: wait a bit then curl the listings service inside cluster
          kubectl run curl --image=curlimages/curl -i --rm --restart=Never -- \
            curl http://listings-deployment:3000/health || exit 1
